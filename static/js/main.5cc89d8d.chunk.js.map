{"version":3,"sources":["components/editBookModal/EditBookModal.module.css","components/addBookModal/AddBookModal.module.css","components/ui/Modal.module.css","components/booksTable/BooksTable.module.css","components/booksPanel/BooksPanel.module.css","components/searchBook/SearchBook.module.css","components/header/Header.module.css","components/header/HeaderLogo.module.css","utils/BooksStorage.js","utils/firebase.js","context/BookContext.js","context/ModalContext.js","components/header/HeaderLogo.js","components/header/Header.js","components/ui/Modal.js","utils/inputValidate.js","hooks/use-input.js","components/editBookModal/EditBookModal.js","components/booksTable/BooksTableHeader.js","components/booksTable/BooksTable.js","components/searchBook/SearchBook.js","components/addBookModal/AddBookModal.js","components/booksPanel/BooksPanel.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BooksStorage","key","value","window","localStorage","setItem","getItem","FirebaseDb","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","location","callback","db","getDatabase","dbRef","ref","onValue","postData","set","id","newObject","reference","update","remove","storage","firebaseDb","BookContextProvider","props","state","currentBook","searchValue","books","addBookHandler","bind","deleteBookHandler","updateBook","searchInputChangeHandler","setCurrentBookHandler","book","updatedBooks","this","newBook","uuidV4","push","setState","then","console","log","filter","JSON","stringify","delete","updatedBook","map","event","prevState","target","get","snapshot","val","data","booksArray","title","isbn","author","publisher","year_published","category","BookContext","Provider","children","Component","createContext","ModalContext","React","ModalContextProvider","content","showModal","hideModal","ModalComponent","HeaderLogo","className","styles","Header","mainHeader","portalElement","document","getElementById","ModalBackDrop","modalBackdrop","onClick","onClose","ModalContent","modalBody","type","modalClose","modalInner","Modal","Consumer","modalContext","Fragment","ReactDOM","createPortal","inputValidate","messages","default","email","year","regExp","RegExp","test","isValid","errorMessage","initialState","isTouched","reducer","action","useInput","initialValue","useReducer","inputState","dispatch","hasError","inputChangehandler","inputBlurHandler","inputResetHandler","EditBookModal","formIsValid","titleValue","titleIsvalid","titleHasError","titleChangeHandler","titleBlurHandler","titleResetHandler","titleErrorMessage","isbnValue","isbnIsvalid","isbnHasError","isbnChangeHandler","isbnBlurHandler","isbnResetHandler","isbnErrorMessage","authorValue","authorIsvalid","authorHasError","authorChangeHandler","authorBlurHandler","authorResetHandler","authorErrorMessage","publisherValue","publisherIsvalid","publisherHasError","publisherChangeHandler","publisherBlurHandler","publisherResetHandler","publisherErrorMessage","yearPublishedValue","yearPublishedIsvalid","yearPublishedHasError","yearPublishedChangeHandler","yearPublishedBlurHandler","yearPublishedResetHandler","yearPublishedErrorMessage","categoryValue","categoryIsvalid","categoryHasError","categoryChangeHandler","categoryBlurHandler","categoryResetHandler","categoryErrorMessage","context","editBookForm","onSubmit","preventDefault","inputField","htmlFor","placeholder","onChange","onBlur","btnPrimary","disabled","BooksTableHeader","scope","BooksTable","bookContext","tableContent","editBtnHandler","toString","trim","toLowerCase","includes","length","booksTableControl","booksTableMessage","colSpan","booksTable","SearchBook","searchBook","searchBookField","AddBookModal","addBookForm","BooksPanel","booksPanel","searchBookHolder","onChangeHandler","App","addBookModalIsActive","editBookModalIsActive","showAddBookModal","hideAddBookModal","showEditBookModal","hideEditBookModal","addBookModalShowHandler","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.5cc89d8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBookForm\":\"EditBookModal_editBookForm__9l7nd\",\"inputField\":\"EditBookModal_inputField__1VlMS\",\"btnPrimary\":\"EditBookModal_btnPrimary__jzDEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBookForm\":\"AddBookModal_addBookForm__mxnfI\",\"inputField\":\"AddBookModal_inputField__3f953\",\"btnPrimary\":\"AddBookModal_btnPrimary__1ypLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__1FpXf\",\"modalBody\":\"Modal_modalBody__151Ye\",\"fadeIn\":\"Modal_fadeIn__1-37R\",\"modalClose\":\"Modal_modalClose__TVRbh\",\"modalInner\":\"Modal_modalInner__7iVPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"booksTable\":\"BooksTable_booksTable__3OgVA\",\"booksTableControl\":\"BooksTable_booksTableControl__2mPpp\",\"booksTableMessage\":\"BooksTable_booksTableMessage__Eoyv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"booksPanel\":\"BooksPanel_booksPanel__lJfHM\",\"searchBookHolder\":\"BooksPanel_searchBookHolder__-1J8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBook\":\"SearchBook_searchBook__VZ4jE\",\"searchBookField\":\"SearchBook_searchBookField__98oai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__1NXMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderLogo\":\"HeaderLogo_HeaderLogo__aIxQI\"};","\r\nclass BooksStorage {\r\n\r\n    set(key, value) {\r\n\r\n        const localStorage = window.localStorage;\r\n\r\n        localStorage.setItem(key, value);\r\n\r\n    }\r\n\r\n    get(key) {\r\n\r\n        const localStorage = window.localStorage;\r\n\r\n        if(!localStorage.getItem(key)) return false;\r\n\r\n        return localStorage.getItem(key);\r\n    }\r\n        \r\n}\r\n\r\nexport default BooksStorage;","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, onValue, update, remove, get, child, push } from \"firebase/database\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4BlfeMqLhjxOgz6SsCbZD18P2j-qQj-k\",\r\n  authDomain: \"book-catalog-app-b2099.firebaseapp.com\",\r\n  projectId: \"book-catalog-app-b2099\",\r\n  storageBucket: \"book-catalog-app-b2099.appspot.com\",\r\n  messagingSenderId: \"452535609431\",\r\n  appId: \"1:452535609431:web:647270842adb54cf061b12\",\r\n  measurementId: \"G-PJ2HN6TMSH\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nclass FirebaseDb { \r\n\r\n    get(location, callback) {\r\n        const db = getDatabase();\r\n        const dbRef = ref(db, location);\r\n        \r\n        onValue(dbRef, callback);\r\n        \r\n    }\r\n    \r\n    set(location, postData) {\r\n      const db = getDatabase();\r\n     \r\n      return set(ref(db, `${location}/${postData.id}`), postData);\r\n    }\r\n\r\n    update(location, id, newObject) {\r\n      const db        = getDatabase();\r\n      const reference = ref(db, `${location}/${id}`);\r\n\r\n      return update(reference, newObject);\r\n    }\r\n\r\n    delete(location, id) {\r\n      const db        = getDatabase();\r\n      const reference = ref(db, `${location}/${id}`);\r\n\r\n      return remove(reference);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FirebaseDb;\r\n","import React, { createContext, Component } from 'react';\r\nimport { books } from '../initial-books-data.json';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport BooksStorage from '../utils/BooksStorage';\r\nimport FirebaseDb from '../utils/firebase';\r\n\r\n\r\n\r\nconst storage = new BooksStorage();\r\nconst firebaseDb = new FirebaseDb;\r\n\r\nclass BookContextProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentBook: null,\r\n            searchValue: '',\r\n            books: [],\r\n        };\r\n        this.addBookHandler           = this.addBookHandler.bind(this);\r\n        this.deleteBookHandler        = this.deleteBookHandler.bind(this);\r\n        this.updateBook               = this.updateBook.bind(this);\r\n        this.searchInputChangeHandler = this.searchInputChangeHandler.bind(this);\r\n        this.setCurrentBookHandler    = this.setCurrentBookHandler.bind(this);\r\n    }\r\n\r\n    addBookHandler(book) {\r\n\r\n        let updatedBooks = [...this.state.books];\r\n        const newBook = {\r\n            ...book,\r\n            id: uuidV4()\r\n        }\r\n\r\n        updatedBooks.push(newBook);\r\n\r\n        this.setState({ books: updatedBooks });\r\n\r\n        // add new book to the firebase\r\n        firebaseDb.set('books', newBook)\r\n            .then(() => {\r\n                console.log('added book');\r\n            });\r\n\r\n    }\r\n\r\n    deleteBookHandler(id) {\r\n    \r\n        const updatedBooks = [...this.state.books].filter(book => book.id != id);\r\n        \r\n        this.setState({\r\n            books:  updatedBooks\r\n        });\r\n\r\n        // save book to the local storage\r\n        storage.set('books', JSON.stringify(updatedBooks));\r\n\r\n        //delete book from the database\r\n        firebaseDb.delete('books', id)\r\n            .then(() => {\r\n                console.log('deleted');\r\n            });\r\n        \r\n    }\r\n    \r\n    updateBook(id, updatedBook) {\r\n        const currentBooks = [...this.state.books];\r\n        const updatedBooks = currentBooks.map(book => {\r\n          \r\n          // returns the updated book\r\n          if(id == book.id) return updatedBook;\r\n            \r\n          return book;\r\n    \r\n        });\r\n        \r\n        // update state\r\n        this.setState({\r\n          books: updatedBooks\r\n        });\r\n    \r\n        // save book to the firebase database\r\n        firebaseDb.update('books', id, updatedBook)\r\n            .then(() => {\r\n                console.log('updated');\r\n            });\r\n        \r\n        console.log('edit');\r\n    }\r\n\r\n    searchInputChangeHandler(event) {\r\n    \r\n        this.setState(prevState => {\r\n          return {\r\n            searchValue: event.target.value\r\n          }\r\n        });\r\n    \r\n    }\r\n\r\n    setCurrentBookHandler(book) {\r\n\r\n        this.setState({\r\n            currentBook: book\r\n        });\r\n\r\n    }\r\n\r\n    // lifecycle methods\r\n    componentDidMount() {\r\n\r\n        \r\n\r\n        // get books from the firebase db\r\n        firebaseDb.get('books', (snapshot) => {\r\n\r\n            if(snapshot.val() != null) {\r\n\r\n                const data = snapshot.val();\r\n                const booksArray = []; \r\n          \r\n                for (const key in data) {\r\n          \r\n                  const id = key;\r\n                  const {title, isbn, author, publisher, year_published, category} = data[key];\r\n          \r\n                  booksArray.push({\r\n                    id: id,  \r\n                    title: title,\r\n                    isbn: isbn,\r\n                    author: author, \r\n                    publisher: publisher, \r\n                    year_published: year_published,\r\n                    category: category\r\n                  });\r\n          \r\n                }\r\n          \r\n                this.setState({\r\n                    books: booksArray\r\n                });\r\n\r\n            } else {\r\n\r\n                this.setState({\r\n                    books: []\r\n                });\r\n\r\n            }\r\n\r\n            \r\n      \r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const {addBookHandler, deleteBookHandler, updateBook, searchInputChangeHandler, setCurrentBookHandler} = this;\r\n\r\n        return (\r\n            <BookContext.Provider value={{...this.state, addBookHandler, deleteBookHandler, updateBook, searchInputChangeHandler, setCurrentBookHandler}}>\r\n\r\n                {this.props.children}\r\n\r\n            </BookContext.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport const BookContext = createContext();\r\nexport default BookContextProvider;\r\n","import React from \"react\";\r\n\r\nexport const ModalContext = React.createContext();\r\n\r\nclass ModalContextProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            content: null\r\n        }\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n    }\r\n\r\n    showModal(content) {\r\n        this.setState({\r\n            content: content\r\n        });\r\n    }\r\n\r\n    hideModal() {\r\n        this.setState({\r\n            content: null\r\n        });\r\n    }\r\n\r\n\r\n    render () {\r\n        const { content } = this.state;\r\n        const ModalComponent = content ? content : null;\r\n\r\n        return (\r\n            <ModalContext.Provider value={{ content, showModal: this.showModal, hideModal: this.hideModal}}>\r\n                {this.props.children}\r\n                { ModalComponent }\r\n            </ModalContext.Provider>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ModalContextProvider;","import styles from './HeaderLogo.module.css';\r\n\r\nfunction HeaderLogo() {\r\n    return (\r\n        <div className={styles.HeaderLogo}>\r\n            <h1>Book Catalog App</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderLogo;","import styles from './Header.module.css';\r\n\r\nimport HeaderLogo from \"./HeaderLogo\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={styles.mainHeader}>\r\n            <HeaderLogo/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import styles from './Modal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ModalContext } from '../../context/ModalContext';\r\n\r\nconst portalElement = document.getElementById('modal-wrapper');\r\n\r\nfunction ModalBackDrop(props) {\r\n    return (\r\n        <div className={styles.modalBackdrop} onClick={props.onClose}></div>\r\n    );\r\n}\r\n\r\nfunction ModalContent(props) {\r\n    return (\r\n        <div className={styles.modalBody}>\r\n            <button type=\"button\" className={styles.modalClose} onClick={props.onClose}>x</button>\r\n            {props.title ? <h3>{props.title}</h3> : null}\r\n            <div className={styles.modalInner}>{props.children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Modal(props) {\r\n    return (\r\n        <ModalContext.Consumer>{\r\n            (modalContext) => {\r\n                const { hideModal } = modalContext;\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        {ReactDOM.createPortal(<ModalBackDrop onClose={hideModal} />, portalElement)}\r\n                        {ReactDOM.createPortal(<ModalContent title={props.title} onClose={hideModal}>{props.children}</ModalContent>, portalElement)}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }</ModalContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Modal","function inputValidate(value, type = 'default') {\r\n\r\n    let messages = {\r\n        default: `Field is required`,\r\n        email: 'Email is invalid.',\r\n        isbn: 'Value must be equal to 5 digits',\r\n        year: 'Year must be follow this format (YYYY)',\r\n    };\r\n\r\n    const regExp = new RegExp(/^\\s*$/);\r\n   \r\n    if(regExp.test(value)) {\r\n\r\n        return {\r\n            isValid: false,\r\n            errorMessage: messages.default\r\n        };\r\n\r\n    } else if(type == 'isbn') {\r\n\r\n        const regExp = new RegExp(/^[\\d]{5}?$/);\r\n        const test   =  regExp.test(value); // tests if the value is equal to 5 digits\r\n     \r\n        if(!test) {\r\n\r\n            return {\r\n                isValid: false,\r\n                errorMessage: messages.isbn\r\n            }\r\n\r\n        }\r\n\r\n    } else if (type == 'email') {\r\n\r\n        const regExp = new RegExp(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+/);\r\n\r\n        if(!regExp.test(value)) {\r\n\r\n            return {\r\n                isValid: false,\r\n                errorMessage: messages.email\r\n            }\r\n\r\n        }\r\n\r\n    } else if (type == 'year') {\r\n\r\n        const regExp  = new RegExp(/^[\\d]{4}?$/);\r\n        \r\n        if(!regExp.test(value)) {\r\n\r\n            return {\r\n                isValid: false,\r\n                errorMessage: messages.year\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return { isValid: true , errorMessage: ''};\r\n\r\n}\r\n\r\nexport default inputValidate;","import { useReducer } from \"react\";\r\nimport inputValidate from \"../utils/inputValidate\";\r\n\r\nconst initialState = {\r\n    value: '',\r\n    isTouched: false,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n\r\n    switch(action.type) {\r\n        case 'change':\r\n            return { value: action.value, isTouched: true };\r\n        break;\r\n\r\n        case 'blur':\r\n            return { value: state.value, isTouched: true }\r\n        break;\r\n\r\n        case 'reset':\r\n            return { value: '', isTouched: false }\r\n        break;\r\n\r\n    }\r\n\r\n}\r\n\r\nconst useInput = function(initialValue = false, type) {\r\n    const [inputState, dispatch]      = useReducer(reducer, initialValue ? { value: initialValue, isTouched: false } : initialState);\r\n    const {isValid, errorMessage}     = inputValidate(inputState.value, type);\r\n    const hasError                    = !isValid && inputState.isTouched;\r\n\r\n    const inputChangehandler = function (event) {\r\n        dispatch({type: 'change', value: event.target.value });\r\n    };\r\n\r\n    const inputBlurHandler = function() {\r\n        dispatch({ type: 'blur' });\r\n    };\r\n\r\n    const inputResetHandler = function() {\r\n        dispatch({ type: 'reset' });\r\n    }\r\n\r\n\r\n    return {\r\n        value: inputState.value,\r\n        isValid,\r\n        hasError,\r\n        inputChangehandler,\r\n        inputBlurHandler,\r\n        inputResetHandler,\r\n        errorMessage\r\n    };\r\n\r\n};\r\n\r\nexport default useInput;","import Modal from '../ui/Modal';\r\nimport styles from './EditBookModal.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nimport { BookContext } from '../../context/BookContext';\r\n\r\nfunction EditBookModal(props) {\r\n\r\n    let formIsValid = false;\r\n    let {id, title, isbn, author, publisher, year_published, category} = props.book;\r\n    \r\n    let { \r\n        value: titleValue,\r\n        isValid: titleIsvalid,\r\n        hasError: titleHasError,\r\n        inputChangehandler: titleChangeHandler,\r\n        inputBlurHandler: titleBlurHandler,\r\n        inputResetHandler: titleResetHandler,\r\n        errorMessage: titleErrorMessage\r\n    } = useInput(title);\r\n\r\n    let { \r\n        value: isbnValue,\r\n        isValid: isbnIsvalid,\r\n        hasError: isbnHasError,\r\n        inputChangehandler: isbnChangeHandler,\r\n        inputBlurHandler: isbnBlurHandler,\r\n        inputResetHandler: isbnResetHandler,\r\n        errorMessage: isbnErrorMessage\r\n    } = useInput(isbn, 'isbn');\r\n\r\n    let { \r\n        value: authorValue,\r\n        isValid: authorIsvalid,\r\n        hasError: authorHasError,\r\n        inputChangehandler: authorChangeHandler,\r\n        inputBlurHandler: authorBlurHandler,\r\n        inputResetHandler: authorResetHandler,\r\n        errorMessage: authorErrorMessage\r\n    } = useInput(author);\r\n\r\n    let { \r\n        value: publisherValue,\r\n        isValid: publisherIsvalid,\r\n        hasError: publisherHasError,\r\n        inputChangehandler: publisherChangeHandler,\r\n        inputBlurHandler: publisherBlurHandler,\r\n        inputResetHandler: publisherResetHandler,\r\n        errorMessage: publisherErrorMessage\r\n    } = useInput(publisher);\r\n\r\n    let { \r\n        value: yearPublishedValue,\r\n        isValid: yearPublishedIsvalid,\r\n        hasError: yearPublishedHasError,\r\n        inputChangehandler: yearPublishedChangeHandler,\r\n        inputBlurHandler: yearPublishedBlurHandler,\r\n        inputResetHandler: yearPublishedResetHandler,\r\n        errorMessage: yearPublishedErrorMessage\r\n    } = useInput(year_published, 'year');\r\n\r\n    let { \r\n        value: categoryValue,\r\n        isValid: categoryIsvalid,\r\n        hasError: categoryHasError,\r\n        inputChangehandler: categoryChangeHandler,\r\n        inputBlurHandler: categoryBlurHandler,\r\n        inputResetHandler: categoryResetHandler,\r\n        errorMessage: categoryErrorMessage\r\n    } = useInput(category);\r\n\r\n\r\n    // checks if all the fields are valid\r\n    if(titleIsvalid && isbnIsvalid && authorIsvalid && publisherIsvalid && yearPublishedIsvalid && categoryIsvalid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    return (\r\n\r\n        <BookContext.Consumer>{\r\n            (context) => {\r\n\r\n                const { updateBook, } = context;\r\n\r\n                function formSubmitHandler(event) {\r\n\r\n                    event.preventDefault();\r\n\r\n                    if(!formIsValid) return;\r\n\r\n                    updateBook(id, {\r\n                        id: id,\r\n                        title: titleValue,\r\n                        isbn: isbnValue,\r\n                        author: authorValue,\r\n                        publisher: publisherValue,\r\n                        year_published: yearPublishedValue,\r\n                        category: categoryValue\r\n                    });\r\n\r\n                    //reset fields\r\n                    titleResetHandler();\r\n                    isbnResetHandler();\r\n                    authorResetHandler();\r\n                    publisherResetHandler();\r\n                    yearPublishedResetHandler();\r\n                    categoryResetHandler();\r\n                    \r\n                }\r\n\r\n                return (\r\n                    <Modal title=\"Edit Book\" onClose={props.onClose}>\r\n                        <div className={styles.editBookForm}>\r\n                            <form onSubmit={formSubmitHandler}>\r\n\r\n                                <div className={`inputField ${titleHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-title\">ISBN</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-title\" \r\n                                        placeholder=\"Title\" \r\n                                        onChange={titleChangeHandler} \r\n                                        onBlur={titleBlurHandler} \r\n                                        value={titleValue}/>\r\n                                    <div className=\"vaildationMessage\">{titleErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${isbnHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-isbn\">ISBN</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-isbn\" \r\n                                        placeholder=\"ISBN\"\r\n                                        onChange={isbnChangeHandler} \r\n                                        onBlur={isbnBlurHandler} \r\n                                        value={isbnValue}/>\r\n                                    <div className=\"vaildationMessage\">{isbnErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${authorHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-author\">Author</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-author\" \r\n                                        placeholder=\"Author\" \r\n                                        onChange={authorChangeHandler}\r\n                                        onBlur={authorBlurHandler}\r\n                                        value={authorValue}/>\r\n                                    <div className=\"vaildationMessage\">{authorErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${publisherHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-publisher\">Publisher</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-publisher\" \r\n                                        onChange={publisherChangeHandler}\r\n                                        onBlur={publisherBlurHandler}\r\n                                        placeholder=\"Publisher\"\r\n                                        value={publisherValue}/>\r\n                                    <div className=\"vaildationMessage\">{publisherErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${yearPublishedHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-year-published\">Year Published</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-year-published\" \r\n                                        onChange={yearPublishedChangeHandler}\r\n                                        onBlur={yearPublishedBlurHandler}\r\n                                        placeholder=\"Year Published\"\r\n                                        value={yearPublishedValue}/>\r\n                                    <div className=\"vaildationMessage\">{yearPublishedErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${categoryHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-category\">Category</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-category\" \r\n                                        onChange={categoryChangeHandler}\r\n                                        onBlur={categoryBlurHandler}\r\n                                        placeholder=\"Category\"\r\n                                        value={categoryValue}/>\r\n                                    <div className=\"vaildationMessage\">{categoryErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className={`btnPrimary ${styles.btnPrimary}`} disabled={formIsValid ? false : true}>Save</button>\r\n                            </form>\r\n                        </div>\r\n                    </Modal>\r\n                );\r\n   \r\n            }\r\n        }</BookContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default EditBookModal;","import React from \"react\";\r\n\r\nfunction BooksTableHeader(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">ISBN</th>\r\n                    <th scope=\"col\">Author</th>\r\n                    <th scope=\"col\">Publisher</th>\r\n                    <th scope=\"col\">Year Published</th>\r\n                    <th scope=\"col\">Category</th>\r\n                    <th scope=\"col\"></th>\r\n                </tr>\r\n            </thead>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BooksTableHeader;","import styles from './BooksTable.module.css';\r\nimport { BookContext } from '../../context/BookContext';\r\nimport { ModalContext } from '../../context/ModalContext';\r\nimport EditBookModal from '../editBookModal/EditBookModal';\r\nimport BooksTableHeader from './BooksTableHeader';\r\nimport Modal from '../ui/Modal';\r\n\r\nfunction BooksTable(props) {\r\n\r\n    return (\r\n        <ModalContext.Consumer>{\r\n            (modalContext) => {\r\n        \r\n                return (\r\n                    <BookContext.Consumer>{\r\n                        (bookContext) => {\r\n                            let { books, deleteBookHandler, searchValue, setCurrentBookHandler } = bookContext;\r\n                            let { showModal } = modalContext;\r\n\r\n                            let tableContent;\r\n\r\n                            function editBtnHandler(book) {\r\n\r\n                                showModal(<EditBookModal book={book}/>); \r\n                                \r\n                                setCurrentBookHandler(book);\r\n                            }\r\n\r\n                            // filter books\r\n                            books = books.filter(book => {\r\n\r\n                                if(searchValue == '') return book;\r\n\r\n                                for(let data in book) {\r\n\r\n                                    if(book[data].toString().trim().toLowerCase().includes(searchValue.trim().toLowerCase())) {\r\n                                        return book;\r\n                                    }\r\n\r\n                                }\r\n\r\n                            });\r\n\r\n                            if(!books.length) {\r\n\r\n                                tableContent = <tr className={styles.booksTableMessage}><td colSpan=\"7\">Books not available ...</td></tr>\r\n\r\n                            } else {\r\n\r\n                                tableContent = books.map(book => {\r\n                                    const {id, title, isbn, author, publisher, year_published, category} = book;\r\n\r\n                                    return (\r\n                                        <tr data-book-id={id} key={id}>\r\n                                            <td>{title}</td>\r\n                                            <td>{isbn}</td>\r\n                                            <td>{author}</td>\r\n                                            <td>{publisher}</td>\r\n                                            <td>{year_published}</td>\r\n                                            <td>{category}</td>\r\n                                            <td className={styles.booksTableControl}>\r\n                                                <button type=\"button\" className=\"btnSecondary booksEdit\" onClick={editBtnHandler.bind(this, book)}>Edit</button>\r\n                                                <button type=\"button\" className=\"btnDanger booksDelete\" onClick={deleteBookHandler.bind(this, id)}>Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                });\r\n\r\n                            }\r\n\r\n                            return (\r\n                                <div className={styles.booksTable}>\r\n                                    <table>\r\n                                    <BooksTableHeader/>\r\n                                    <tbody>\r\n                                        {tableContent}\r\n                                    </tbody>\r\n                                </table>\r\n                                </div>\r\n                            );\r\n                        }\r\n                }</BookContext.Consumer>\r\n                    );\r\n            }\r\n        }</ModalContext.Consumer>\r\n    );\r\n\r\n}\r\n\r\nexport default BooksTable;","import React from 'react';\r\nimport styles from './SearchBook.module.css';\r\nimport { BookContext } from '../../context/BookContext';\r\n\r\nfunction SearchBook(props) {\r\n   \r\n    return (\r\n\r\n        <BookContext.Consumer>{\r\n\r\n            (context) => {\r\n                const {searchInputChangeHandler, searchValue} = context;\r\n\r\n                return (\r\n                    <div className={styles.searchBook}>\r\n                        <form>\r\n                            <div className={`inputField ${styles.searchBookField}`} >\r\n                                <label htmlFor=\"book-keyword\">Enter Keyword</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"book-keyword\"\r\n                                    placeholder=\"Search ...\"\r\n                                    value={searchValue}\r\n                                    onChange={searchInputChangeHandler}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }</BookContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default SearchBook;","import Modal from '../ui/Modal';\r\nimport styles from './AddBookModal.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nimport { BookContext } from '../../context/BookContext';\r\n\r\nfunction AddBookModal(props) {\r\n\r\n    let formIsValid = false;\r\n\r\n    const { \r\n        value: titleValue,\r\n        isValid: titleIsvalid,\r\n        hasError: titleHasError,\r\n        inputChangehandler: titleChangeHandler,\r\n        inputBlurHandler: titleBlurHandler,\r\n        inputResetHandler: titleResetHandler,\r\n        errorMessage: titleErrorMessage\r\n    } = useInput('');\r\n\r\n    const { \r\n        value: isbnValue,\r\n        isValid: isbnIsvalid,\r\n        hasError: isbnHasError,\r\n        inputChangehandler: isbnChangeHandler,\r\n        inputBlurHandler: isbnBlurHandler,\r\n        inputResetHandler: isbnResetHandler,\r\n        errorMessage: isbnErrorMessage\r\n    } = useInput('', 'isbn');\r\n\r\n    const { \r\n        value: authorValue,\r\n        isValid: authorIsvalid,\r\n        hasError: authorHasError,\r\n        inputChangehandler: authorChangeHandler,\r\n        inputBlurHandler: authorBlurHandler,\r\n        inputResetHandler: authorResetHandler,\r\n        errorMessage: authorErrorMessage\r\n    } = useInput('');\r\n\r\n    const { \r\n        value: publisherValue,\r\n        isValid: publisherIsvalid,\r\n        hasError: publisherHasError,\r\n        inputChangehandler: publisherChangeHandler,\r\n        inputBlurHandler: publisherBlurHandler,\r\n        inputResetHandler: publisherResetHandler,\r\n        errorMessage: publisherErrorMessage\r\n    } = useInput('');\r\n\r\n    const { \r\n        value: yearPublishedValue,\r\n        isValid: yearPublishedIsvalid,\r\n        hasError: yearPublishedHasError,\r\n        inputChangehandler: yearPublishedChangeHandler,\r\n        inputBlurHandler: yearPublishedBlurHandler,\r\n        inputResetHandler: yearPublishedResetHandler,\r\n        errorMessage: yearPublishedErrorMessage\r\n    } = useInput('', 'year');\r\n\r\n    const { \r\n        value: categoryValue,\r\n        isValid: categoryIsvalid,\r\n        hasError: categoryHasError,\r\n        inputChangehandler: categoryChangeHandler,\r\n        inputBlurHandler: categoryBlurHandler,\r\n        inputResetHandler: categoryResetHandler,\r\n        errorMessage: categoryErrorMessage\r\n    } = useInput('');\r\n\r\n\r\n    // checks if all the fields are valid\r\n    if(titleIsvalid && isbnIsvalid && authorIsvalid && publisherIsvalid && yearPublishedIsvalid && categoryIsvalid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    return (\r\n        <BookContext.Consumer>\r\n            {(context) => {\r\n                const {addBookHandler} = context;\r\n            \r\n                function formSubmitHandler(event) {\r\n\r\n                    event.preventDefault();\r\n\r\n                    if(!formIsValid) return;\r\n\r\n                    addBookHandler({\r\n                        title: titleValue,\r\n                        isbn: isbnValue,\r\n                        author: authorValue,\r\n                        publisher: publisherValue,\r\n                        year_published: yearPublishedValue,\r\n                        category: categoryValue\r\n                    });\r\n                    \r\n                    //reset fields\r\n                    titleResetHandler();\r\n                    isbnResetHandler();\r\n                    authorResetHandler();\r\n                    publisherResetHandler();\r\n                    yearPublishedResetHandler();\r\n                    categoryResetHandler();\r\n                }\r\n\r\n                return (\r\n                    <Modal title=\"Add Book\">\r\n                        <div className={styles.addBookForm}>\r\n                            <form onSubmit={formSubmitHandler}>\r\n\r\n                                <div className={`inputField ${titleHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-title\">ISBN</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-title\" \r\n                                        placeholder=\"Title\" \r\n                                        onChange={titleChangeHandler} \r\n                                        onBlur={titleBlurHandler} \r\n                                        value={titleValue}/>\r\n                                    <div className=\"vaildationMessage\">{titleErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${isbnHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-isbn\">ISBN</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-isbn\" \r\n                                        placeholder=\"ISBN\"\r\n                                        onChange={isbnChangeHandler} \r\n                                        onBlur={isbnBlurHandler} \r\n                                        value={isbnValue}/>\r\n                                    <div className=\"vaildationMessage\">{isbnErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${authorHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-author\">Author</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-author\" \r\n                                        placeholder=\"Author\" \r\n                                        onChange={authorChangeHandler}\r\n                                        onBlur={authorBlurHandler}\r\n                                        value={authorValue}/>\r\n                                    <div className=\"vaildationMessage\">{authorErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${publisherHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-publisher\">Publisher</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-publisher\" \r\n                                        onChange={publisherChangeHandler}\r\n                                        onBlur={publisherBlurHandler}\r\n                                        placeholder=\"Publisher\"\r\n                                        value={publisherValue}/>\r\n                                    <div className=\"vaildationMessage\">{publisherErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${yearPublishedHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-year-published\">Year Published</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-year-published\" \r\n                                        onChange={yearPublishedChangeHandler}\r\n                                        onBlur={yearPublishedBlurHandler}\r\n                                        placeholder=\"Year Published\"\r\n                                        value={yearPublishedValue}/>\r\n                                    <div className=\"vaildationMessage\">{yearPublishedErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <div className={`inputField ${categoryHasError ? 'invalid' : ''} ${styles.inputField}`}>\r\n                                    <label htmlFor=\"book-category\">Category</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"book-category\" \r\n                                        onChange={categoryChangeHandler}\r\n                                        onBlur={categoryBlurHandler}\r\n                                        placeholder=\"Category\"\r\n                                        value={categoryValue}/>\r\n                                    <div className=\"vaildationMessage\">{categoryErrorMessage}</div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className={`btnPrimary ${styles.btnPrimary}`} disabled={formIsValid ? false : true}>Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </Modal>\r\n                );\r\n            }}\r\n        </BookContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default AddBookModal;","import styles from './BooksPanel.module.css';\r\nimport SearchBook from '../searchBook/SearchBook';\r\nimport AddBookModal from '../addBookModal/AddBookModal';\r\nimport { ModalContext } from '../../context/ModalContext';\r\n\r\nfunction BooksPanel(props) {\r\n    return (\r\n        <ModalContext.Consumer>{ \r\n            (modalContext) => {\r\n                const { content, showModal} = modalContext;\r\n\r\n                return (\r\n                    <div className={styles.booksPanel}>\r\n                        <div className={styles.searchBookHolder}>\r\n                            <SearchBook onChangeHandler={props.onChangeHandler}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btnSecondary\" onClick={() => { showModal(<AddBookModal/>) }}>Add Book</button>\r\n                    </div>\r\n                );\r\n            }\r\n         }</ModalContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default BooksPanel;","import React from 'react';\r\nimport './App.css';\r\nimport { books } from './initial-books-data.json';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport BooksStorage from './utils/BooksStorage';\r\nimport BookContextProvider from './context/BookContext';\r\nimport ModalContextProvider from './context/ModalContext';\r\nimport FirebaseDb from './utils/firebase';\r\n\r\nimport Header from './components/header/Header';\r\nimport BooksTable from './components/booksTable/BooksTable';\r\nimport BooksPanel from './components/booksPanel/BooksPanel';\r\nimport AddBookModal from './components/addBookModal/AddBookModal';\r\nimport EditBookModal from './components/editBookModal/EditBookModal';\r\n\r\nconst firebaseDb = new FirebaseDb;\r\nconst storage = new BooksStorage();\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addBookModalIsActive: false,\r\n      editBookModalIsActive: false,\r\n      currentBook: null,\r\n      searchValue: '',\r\n      books: [],\r\n    };\r\n    this.showAddBookModal         = this.showAddBookModal.bind(this);\r\n    this.hideAddBookModal         = this.hideAddBookModal.bind(this);\r\n    this.showEditBookModal        = this.showEditBookModal.bind(this);\r\n    this.hideEditBookModal        = this.hideEditBookModal.bind(this);\r\n  }\r\n\r\n  showAddBookModal() {\r\n    this.setState({ addBookModalIsActive: true });\r\n  }\r\n\r\n  hideAddBookModal() {\r\n    this.setState({ addBookModalIsActive: false });\r\n  }\r\n\r\n  showEditBookModal(book) {\r\n    this.setState({ currentBook: book });\r\n  }\r\n\r\n  hideEditBookModal() {\r\n    this.setState({ editBookModalIsActive: false });\r\n  }\r\n\r\n  render() {\r\n    let { \r\n        addBookModalIsActive, \r\n        editBookModalIsActive, \r\n        currentBook } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <BookContextProvider>\r\n          <ModalContextProvider>\r\n            <Header/>\r\n\r\n            {/* modals */}\r\n\r\n            { editBookModalIsActive ? <EditBookModal onClose={this.hideEditBookModal} book={currentBook}/> : null }\r\n\r\n            {/* end modals */}\r\n\r\n            <main>\r\n              <BooksPanel onChangeHandler={this.searchInputChangeHandler} addBookModalShowHandler={this.showAddBookModal} />\r\n              <BooksTable/>\r\n            </main>\r\n          </ModalContextProvider>\r\n        </BookContextProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}